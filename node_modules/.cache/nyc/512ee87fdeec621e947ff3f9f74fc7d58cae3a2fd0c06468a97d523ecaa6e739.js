var cov_14dzbeglc5=function(){var path="/Users/ikram/Documents/TP3_4420A/services/mongo/publication.js";var hash="d8cd23c6f253898937133ee45d90bbf66ae762ae";var Function=function(){}.constructor;var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/ikram/Documents/TP3_4420A/services/mongo/publication.js",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:32}},"1":{start:{line:2,column:16},end:{line:2,column:34}},"2":{start:{line:18,column:32},end:{line:21,column:1}},"3":{start:{line:18,column:38},end:{line:21,column:1}},"4":{start:{line:20,column:2},end:{line:20,column:19}},"5":{start:{line:44,column:24},end:{line:47,column:1}},"6":{start:{line:44,column:30},end:{line:47,column:1}},"7":{start:{line:44,column:44},end:{line:47,column:1}},"8":{start:{line:46,column:2},end:{line:46,column:20}},"9":{start:{line:64,column:26},end:{line:67,column:1}},"10":{start:{line:64,column:32},end:{line:67,column:1}},"11":{start:{line:64,column:47},end:{line:67,column:1}},"12":{start:{line:66,column:2},end:{line:66,column:12}},"13":{start:{line:76,column:26},end:{line:79,column:1}},"14":{start:{line:76,column:32},end:{line:79,column:1}},"15":{start:{line:76,column:38},end:{line:79,column:1}},"16":{start:{line:78,column:2},end:{line:78,column:12}},"17":{start:{line:96,column:29},end:{line:99,column:1}},"18":{start:{line:96,column:35},end:{line:99,column:1}},"19":{start:{line:96,column:45},end:{line:99,column:1}},"20":{start:{line:98,column:2},end:{line:98,column:20}},"21":{start:{line:101,column:0},end:{line:109,column:1}},"22":{start:{line:102,column:2},end:{line:108,column:3}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:18,column:32},end:{line:18,column:33}},loc:{start:{line:18,column:38},end:{line:21,column:1}},line:18},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:38},end:{line:18,column:39}},loc:{start:{line:18,column:50},end:{line:21,column:1}},line:18},"2":{name:"(anonymous_2)",decl:{start:{line:44,column:24},end:{line:44,column:25}},loc:{start:{line:44,column:30},end:{line:47,column:1}},line:44},"3":{name:"(anonymous_3)",decl:{start:{line:44,column:30},end:{line:44,column:31}},loc:{start:{line:44,column:44},end:{line:47,column:1}},line:44},"4":{name:"(anonymous_4)",decl:{start:{line:44,column:44},end:{line:44,column:45}},loc:{start:{line:44,column:56},end:{line:47,column:1}},line:44},"5":{name:"(anonymous_5)",decl:{start:{line:64,column:26},end:{line:64,column:27}},loc:{start:{line:64,column:32},end:{line:67,column:1}},line:64},"6":{name:"(anonymous_6)",decl:{start:{line:64,column:32},end:{line:64,column:33}},loc:{start:{line:64,column:47},end:{line:67,column:1}},line:64},"7":{name:"(anonymous_7)",decl:{start:{line:64,column:47},end:{line:64,column:48}},loc:{start:{line:64,column:59},end:{line:67,column:1}},line:64},"8":{name:"(anonymous_8)",decl:{start:{line:76,column:26},end:{line:76,column:27}},loc:{start:{line:76,column:32},end:{line:79,column:1}},line:76},"9":{name:"(anonymous_9)",decl:{start:{line:76,column:32},end:{line:76,column:33}},loc:{start:{line:76,column:38},end:{line:79,column:1}},line:76},"10":{name:"(anonymous_10)",decl:{start:{line:76,column:38},end:{line:76,column:39}},loc:{start:{line:76,column:50},end:{line:79,column:1}},line:76},"11":{name:"(anonymous_11)",decl:{start:{line:96,column:29},end:{line:96,column:30}},loc:{start:{line:96,column:35},end:{line:99,column:1}},line:96},"12":{name:"(anonymous_12)",decl:{start:{line:96,column:35},end:{line:96,column:36}},loc:{start:{line:96,column:45},end:{line:99,column:1}},line:96},"13":{name:"(anonymous_13)",decl:{start:{line:96,column:45},end:{line:96,column:46}},loc:{start:{line:96,column:57},end:{line:99,column:1}},line:96},"14":{name:"(anonymous_14)",decl:{start:{line:101,column:17},end:{line:101,column:18}},loc:{start:{line:101,column:23},end:{line:109,column:1}},line:101}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const moment=(cov_14dzbeglc5.s[0]++,require('moment'));const mongodb=(cov_14dzbeglc5.s[1]++,require('mongodb'));/**
 * Fonction de rappel pour récupérer le nombre total de publications
 *
 * @callback numPublicationsCallback
 * @param {Error} err - Objet d'erreur
 * @param {Number} size - Nombre total de publications
 */ /**
 *  Obtenir le nombre total de publications
 *
 *  @param db - Base de données Mongo
 *  @param {numPublicationsCallback} callback - Fonction de rappel pour obtenir le résultat
 */cov_14dzbeglc5.s[2]++;const getNumberOfPublications=db=>{cov_14dzbeglc5.f[0]++;cov_14dzbeglc5.s[3]++;return callback=>{cov_14dzbeglc5.f[1]++;cov_14dzbeglc5.s[4]++;// À COMPLÉTER
callback(null,0);};};/**
 * Fonction de rappel pour récupérer les publications.
 *
 * @callback publicationsCallback
 * @param {Error} err - Objet d'erreur
 * @param {Array} results - Tableau de publications
 */ /**
 *  Obtenir toutes les publications.
 *
 *  @param db - Base de données Mongo
 *  @param pagingOpts - Base de données Mongo
 *  @param {Object} pagingOpts - Options de pagination au format suivant:
 *    {
 *      pageNumber: <Number>,
 *      limit: <Number>,
 *      sort: [ [ <FIELDNAME>, <asc|desc> ], [ <FIELDNAME>, <asc|desc> ], ...]
 *    }
 *  @param {publicationsCallback} callback - Fonction de rappel pour obtenir le résultat
 */cov_14dzbeglc5.s[5]++;const getPublications=db=>{cov_14dzbeglc5.f[2]++;cov_14dzbeglc5.s[6]++;return pagingOpts=>{cov_14dzbeglc5.f[3]++;cov_14dzbeglc5.s[7]++;return callback=>{cov_14dzbeglc5.f[4]++;cov_14dzbeglc5.s[8]++;// À COMPLÉTER
callback(null,[]);};};};/**
 * Fonction de rappel pour obtenir la publication créée.
 *
 * @callback createdPublicationCallback
 * @param {Error} err - Objet d'erreur
 * @param {Object} result - Publication créée
 */ /**
 *  Création d'une publication dans la BD.
 *
 *  @param db - Base de données Mongo
 *  @param publication - Publication à ajouter dans la BD
 *  @param {createdPublicationCallback} callback - Fonction de rappel pour obtenir la publication créée
 */cov_14dzbeglc5.s[9]++;const createPublication=db=>{cov_14dzbeglc5.f[5]++;cov_14dzbeglc5.s[10]++;return publication=>{cov_14dzbeglc5.f[6]++;cov_14dzbeglc5.s[11]++;return callback=>{cov_14dzbeglc5.f[7]++;cov_14dzbeglc5.s[12]++;// À COMPLÉTER
callback();};};};/**
 *  Supprimer une publication avec un ID spécifique
 *
 *  @param db - Base de données Mongo
 *  @param id - Identificant à supprimer de la BD
 *  @param callback - Fonction de rappel qui valide la suppression
 */cov_14dzbeglc5.s[13]++;const removePublication=db=>{cov_14dzbeglc5.f[8]++;cov_14dzbeglc5.s[14]++;return id=>{cov_14dzbeglc5.f[9]++;cov_14dzbeglc5.s[15]++;return callback=>{cov_14dzbeglc5.f[10]++;cov_14dzbeglc5.s[16]++;// À COMPLÉTER
callback();};};};/**
 * Fonction de rappel pour récupérer les publications d'un projet.
 *
 * @callback projectPublicationsCallback
 * @param {Error} err - Objet d'erreur
 * @param {Array} result - Publications d'un projet
 */ /**
 *  Obtenir l'ensemble des publications d'un projet
 *
 *  @param db - Base de données Mongo
 *  @param {Array} pubIds - Publication ids
 *  @param {projectPublicationsCallback} callback - Fonction de rappel pour obtenir le résultat
 */cov_14dzbeglc5.s[17]++;const getPublicationsByIds=db=>{cov_14dzbeglc5.f[11]++;cov_14dzbeglc5.s[18]++;return pubIds=>{cov_14dzbeglc5.f[12]++;cov_14dzbeglc5.s[19]++;return callback=>{cov_14dzbeglc5.f[13]++;cov_14dzbeglc5.s[20]++;// À COMPLÉTER
callback(null,[]);};};};cov_14dzbeglc5.s[21]++;module.exports=db=>{cov_14dzbeglc5.f[14]++;cov_14dzbeglc5.s[22]++;return{getPublications:getPublications(db),createPublication:createPublication(db),removePublication:removePublication(db),getPublicationsByIds:getPublicationsByIds(db),getNumberOfPublications:getNumberOfPublications(db)};};