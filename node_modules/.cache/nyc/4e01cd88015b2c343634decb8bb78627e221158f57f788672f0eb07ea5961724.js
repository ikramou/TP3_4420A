var cov_2hx7bc0z8l=function(){var path="C:\\poly\\LOG4420\\TP3\\LOG4420_TP3\\TP3_4420A\\services\\mongo\\projects.js";var hash="994655b5cbdc068ba0457301c17b0bf1907579e0";var Function=function(){}.constructor;var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\poly\\LOG4420\\TP3\\LOG4420_TP3\\TP3_4420A\\services\\mongo\\projects.js",statementMap:{"0":{start:{line:1,column:27},end:{line:1,column:46}},"1":{start:{line:2,column:17},end:{line:2,column:44}},"2":{start:{line:19,column:20},end:{line:22,column:1}},"3":{start:{line:19,column:26},end:{line:22,column:1}},"4":{start:{line:19,column:38},end:{line:22,column:1}},"5":{start:{line:21,column:2},end:{line:21,column:20}},"6":{start:{line:41,column:23},end:{line:44,column:1}},"7":{start:{line:41,column:29},end:{line:44,column:1}},"8":{start:{line:41,column:47},end:{line:44,column:1}},"9":{start:{line:41,column:59},end:{line:44,column:1}},"10":{start:{line:41,column:65},end:{line:44,column:1}},"11":{start:{line:43,column:2},end:{line:43,column:12}},"12":{start:{line:46,column:0},end:{line:51,column:1}},"13":{start:{line:47,column:2},end:{line:50,column:3}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:19,column:20},end:{line:19,column:21}},loc:{start:{line:19,column:26},end:{line:22,column:1}},line:19},"1":{name:"(anonymous_1)",decl:{start:{line:19,column:26},end:{line:19,column:27}},loc:{start:{line:19,column:38},end:{line:22,column:1}},line:19},"2":{name:"(anonymous_2)",decl:{start:{line:19,column:38},end:{line:19,column:39}},loc:{start:{line:19,column:50},end:{line:22,column:1}},line:19},"3":{name:"(anonymous_3)",decl:{start:{line:41,column:23},end:{line:41,column:24}},loc:{start:{line:41,column:29},end:{line:44,column:1}},line:41},"4":{name:"(anonymous_4)",decl:{start:{line:41,column:29},end:{line:41,column:30}},loc:{start:{line:41,column:47},end:{line:44,column:1}},line:41},"5":{name:"(anonymous_5)",decl:{start:{line:41,column:47},end:{line:41,column:48}},loc:{start:{line:41,column:59},end:{line:44,column:1}},line:41},"6":{name:"(anonymous_6)",decl:{start:{line:41,column:59},end:{line:41,column:60}},loc:{start:{line:41,column:65},end:{line:44,column:1}},line:41},"7":{name:"(anonymous_7)",decl:{start:{line:41,column:65},end:{line:41,column:66}},loc:{start:{line:41,column:77},end:{line:44,column:1}},line:41},"8":{name:"(anonymous_8)",decl:{start:{line:46,column:17},end:{line:46,column:18}},loc:{start:{line:46,column:23},end:{line:51,column:1}},line:46}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const{getTranslation}=(cov_2hx7bc0z8l.s[0]++,require('../utils'));const ObjectId=(cov_2hx7bc0z8l.s[1]++,require('mongodb').ObjectId);/**
 * Fonction de rappel pour récupérer les projets
 *
 * @callback projectsCallback
 * @param {Error} err - Objet d'erreur
 * @param {Array} results - Tableaux de projets
 */ /**
 *  Obtenir les projets.
 *
 *  @param db - Base de données Mongo
 *  @param {string} language - Langue courante (p.ex. 'fr', 'en', etc.)
 *  @param {projectsCallback} callback - Fonction de rappel pour obtenir le résultat
 */cov_2hx7bc0z8l.s[2]++;const getProjects=db=>{cov_2hx7bc0z8l.f[0]++;cov_2hx7bc0z8l.s[3]++;return language=>{cov_2hx7bc0z8l.f[1]++;cov_2hx7bc0z8l.s[4]++;return callback=>{cov_2hx7bc0z8l.f[2]++;cov_2hx7bc0z8l.s[5]++;// À COMPLÉTER
callback(null,[]);};};};/**
 * Fonction de rappel pour récupérer un projet particulier
 *
 * @callback projectCallback
 * @param {Error} err - Objet d'erreur
 * @param {Object} result - Un projet particulier
 */ /**
 *  Obtenir un projet selon un identificatn.
 *
 *  @param db - Base de donnée Mongo
 *  @param {Object} translationObj - Objet qui contient l'ensemble des traductions définies
 *  @param {string} language - Langue courante (p.ex. 'fr', 'en', etc.)
 *  @param {int} id - Identificant unique du projet à trouer
 *  @param {projectCallback} callback - Fonction de rappel pour obtenir le résultat
 */cov_2hx7bc0z8l.s[6]++;const getProjectById=db=>{cov_2hx7bc0z8l.f[3]++;cov_2hx7bc0z8l.s[7]++;return translationObj=>{cov_2hx7bc0z8l.f[4]++;cov_2hx7bc0z8l.s[8]++;return language=>{cov_2hx7bc0z8l.f[5]++;cov_2hx7bc0z8l.s[9]++;return id=>{cov_2hx7bc0z8l.f[6]++;cov_2hx7bc0z8l.s[10]++;return callback=>{cov_2hx7bc0z8l.f[7]++;cov_2hx7bc0z8l.s[11]++;// À COMPLÉTER
callback();};};};};};cov_2hx7bc0z8l.s[12]++;module.exports=db=>{cov_2hx7bc0z8l.f[8]++;cov_2hx7bc0z8l.s[13]++;return{getProjects:getProjects(db),getProjectById:getProjectById(db)};};